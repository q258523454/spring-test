
# Loggers组件在此系统中被分为五个级别：DEBUG、INFO、WARN、ERROR和FATAL。
# 这五个级别是有顺序的，DEBUG < INFO < WARN < ERROR < FATAL，分别用来指定这条日志信息的重要程度，明白这一点很重要，
# Log4j有一个规则：只输出级别不低于设定级别的日志信息
# 假设Loggers级别设定为INFO，则INFO、WARN、ERROR和FATAL级别的日志信息都会输出，而级别比INFO低的DEBUG则不会输出


# --------------------------- 设置需要输出的日志,最低级别 BEGIN --------------------------
# 语法格式: log4j.rootLogger = [ level ] , appenderName, appenderName, …
# 下面的设置为3个输出(控制台输出,文件输出,错误文件输出)设置记录日志权限, 都只记录INFO及以上级别(WARN,ERROR,FATAL)
log4j.rootLogger=INFO,CONSOLE,LOGFILE,ERRORFILE
# --------------------------- 设置需要输出的日志,最低级别 END --------------------------


# ---------------------------- log4j: 控制台输出 BEGIN ------------------------------
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.Target=System.out
# 设定日志输出级别
log4j.appender.CONSOLE.threshold=INFO
# 控制台日志输出格式:
log4j.appender.CONSOLE.layout.ConversionPattern=[absdata-servers] %p %d{yyyy-MM-dd HH:mm:ss,SSS} %C.%M(%L) %m%n
# ---------------------------- log4j: 控制台输出 END --------------------------------


# ---------------------------- log4j: 文件输出 BEGIN--------------------------------
# DailyRollingFileAppender: 每天产生一个日志文件
log4j.appender.LOGFILE=org.apache.log4j.DailyRollingFileAppender
# 文件输出路径 %tomcat%/bin 目录下
log4j.appender.LOGFILE.File=absdata-servers-log/absdata-servers.log
log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout
log4j.appender.LOGFILE.layout.ConversionPattern=[absdata-servers] %p %d{yyyy-MM-dd HH:mm:ss,SSS} %C.%M(%L) %m%n
log4j.appender.LOGFILE.Encoding=UTF-8
log4j.appender.LOGFILE.Append = true
log4j.appender.LOGFILE.DatePattern = '.'yyyyMMdd
log4j.appender.LOGFILE.threshold=INFO
# ---------------------------- log4j: 文件输出 END----------------------------------


# ---------------------------- log4j: 保存异常信息到单独文件 BEGIN ----------------------------
log4j.appender.ERRORFILE = org.apache.log4j.DailyRollingFileAppender
log4j.appender.ERRORFILE.File = absdata-servers-log/absdata-servers-error.log
log4j.appender.ERRORFILE.layout = org.apache.log4j.PatternLayout
log4j.appender.ERRORFILE.layout.ConversionPattern = [absdata-servers] %p %d{yyyy-MM-dd HH:mm:ss,SSS} %C.%M(%L) %m%n
log4j.appender.ERRORFILE.Append = true
## 只输出ERROR级别以上的日志, ERROR and FATAL(重大错误)
log4j.appender.ERRORFILE.Threshold = ERROR
# ---------------------------- log4j: 保存异常信息到单独文件 END ----------------------------

